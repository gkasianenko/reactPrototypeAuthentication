{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","useState","setToken","contextValue","Provider","value","children","MainNavigation","history","useHistory","authContext","useContext","className","classes","header","to","logo","onClick","replace","Layout","ProfileForm","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","catch","error","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.66b7b5b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__25aVk\",\"control\":\"ProfileForm_control__15Hqv\",\"action\":\"ProfileForm_action__NO9AL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2XIsS\",\"logo\":\"MainNavigation_logo__1iqCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1b0yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1lU36\"};","import React, { useState } from \"react\";\r\n\r\n//инициализируем контекст для токена аутентификации. Здесь отслеживается наличие токена и какой он, залогинен ли пользователь и функции для логина и выхода из аккаунта\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [token, setToken] = useState(null);\r\n\r\n  //проверяем наличие токена(первращаем в булевое значение переменную)\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default AuthContext;\r\n","import { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport classes from \"./MainNavigation.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  const authContext = useContext(AuthContext);\n\n  const isLoggedIn = authContext.isLoggedIn;\n\n  const logoutHandler = () => {\n    authContext.logout();\n\n    //перенаправляем юзера\n    history.replace(\"/\");\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./ProfileForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n  const authContext = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    //валидация...\n\n    //Отправка запроса на смену пароля. Здесь мы не отслеживаем ошибку минимального кол-ва символов для пароля, а просто в коде фиксируем мин. кол-во символов для инпута через minLength\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAlIpKhm-P4zaAxjC5d_ybXrJav6E4PAF8\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authContext.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      //типа всегда успешно\n      \n      history.replace(\"/\");\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"7\"\n          ref={newPasswordInputRef}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport {useHistory} from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authContext = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAlIpKhm-P4zaAxjC5d_ybXrJav6E4PAF8\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAlIpKhm-P4zaAxjC5d_ybXrJav6E4PAF8\";\n    }\n\n    //Здесь промис будет работать в два этапа. Сначала мы делаем запрос и получаем ответ. Потом с результатом этого ответа через then мы ловим ошибку, если ее нет - возвращаем промис с результатом. А затем от результата делаем еще один then.catch, если успешен - продолжаем работу с данными. Если ошибка, выводим алерт с ошибкой на экран\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          //По этому запросу firebase возвращает объект, в котором есть token, который мы будем использовать дальше\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            //error modal...\n\n            let errorMessage = \"Ошибка авторизации\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n\n            //Ниже через then.catch мы ловим ошибку, которую пробрасываем сейчас, и выводим в алерт\n          });\n        }\n      })\n      .then((data) => {\n        \n        authContext.login(data.idToken);\n        history.replace(\"/\");\n        \n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            ref={passwordInputRef}\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Отправка запроса..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/auth\">\n          <AuthPage />\n        </Route>\n        <Route path=\"/profile\">\n          <UserProfile />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {AuthContextProvider} from \"./store/auth-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__3d9oj\",\"control\":\"AuthForm_control__23ySk\",\"actions\":\"AuthForm_actions__XtjN5\",\"toggle\":\"AuthForm_toggle__1c7ud\"};"],"sourceRoot":""}